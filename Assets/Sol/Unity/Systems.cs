//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using UnityEngine;

namespace Sol.Unity.Factory
{
	public class Systems
	{
		private static Vector2 size = new Vector2(Cards.Size.x * 4, Cards.Size.y * 3);
		private static Vector2 spacing = new Vector2(Cards.Size.x, Cards.Size.y);

		public static Vector2 Size {get {return size;}}

		public static GameObject MakeSystem(int tileX, int tileY)
		{
			Vector2 position = GetPosition(tileX, tileY);
			//GameObject system = GameObject.Instantiate(Resources.Load("SystemTablet")) as GameObject;

			GameObject system = GameObject.CreatePrimitive(PrimitiveType.Plane);

			system.name = "System";

			system.GetComponent<Transform>().localScale = new Vector3(size.x * 0.1f, 1.0f, size.y * 0.1f);
			system.GetComponent<Transform>().position = new Vector3(position.x, 0.5f, position.y);
			system.GetComponent<MeshRenderer>().material.shader = Shader.Find("Transparent/Cutout/Soft Edge Unlit");
			system.GetComponent<MeshRenderer>().material.SetFloat("_Cutoff", 0.0f);

			return system;
		}

		private static Vector2 GetPosition(int tileX, int tileY)
		{

			Vector2 offset = (size + spacing) * 0.5f;
			float x = (spacing.x + size.x) * tileX;
			float y = (spacing.y + size.y) * tileY;
			
			return offset + new Vector2(x, y);
		}

	}
}

